plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://repo.codemc.io/repository/nms/")
    }

    maven {
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }

    maven {
        url = uri("https://repo.extendedclip.com/content/repositories/placeholderapi/")
    }

    maven {
        url = uri("https://jitpack.io")
    }

    maven {
        url = uri("https://repo.aikar.co/content/groups/aikar/")
    }

    maven {
        url = uri("https://repo.glaremasters.me/repository/public/")
    }
}

group = "com.nametagedit"
version = "4.5.23"
description = "NametagEdit"
java.sourceCompatibility = JavaVersion.VERSION_17
def spigotVersion = "1.20.4-R0.1-SNAPSHOT"

configurations {
    shade.extendsFrom(implementation)
}

sourceSets.configureEach { ss ->
    ss.compileClasspath += project.configurations.shade
}

dependencies {
    shade "com.zaxxer:HikariCP:5.1.0"
    shade("com.googlecode.json-simple:json-simple:1.1.1") {
        exclude group: "junit", module: "junit"
    }
    shade("junit:junit:4.13.1")
    shade "com.google.guava:guava:32.0.0-jre"
    shade "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    compileOnly "org.bstats:bstats-bukkit:3.0.2"
    compileOnly "org.spigotmc:spigot-api:${spigotVersion}"
    compileOnly "org.spigotmc:spigot:${spigotVersion}"
    compileOnly "net.luckperms:api:5.4"
    compileOnly "me.clip:placeholderapi:2.10.9"
    compileOnly "org.projectlombok:lombok:1.18.34"
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    compileOnly "me.glaremasters:guilds:3.5.6.6-SNAPSHOT"
    compileOnly files("lib/PermissionsEx.jar")
    compileOnly files("lib/zPermissions.jar")
    compileOnly files("lib/EssentialsGroupManager.jar")
    compileOnly files("lib/LibsDisguises-10.0.25.jar")
}

tasks {
    jar {
        archiveClassifier.set("unshaded")
    }

    shadowJar {
        archiveClassifier.set(null)
        configurations = [project.configurations.shade]
    }

    build {
        dependsOn(tasks.shadowJar)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
